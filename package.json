{
  "name": "list-code-usages-csharp",
  "displayName": "C# Code Usages Finder",
  "description": "Find all usages of C# symbols with GitHub Copilot integration",
  "version": "0.1.16",
  "publisher": "seungyongshim",
  "repository": {
    "type": "git",
    "url": "https://github.com/seungyongshim/ListCodeUsageForCSharpV1.git"
  },
  "engines": {
    "vscode": "^1.96.0"
  },
  "categories": [
    "Programming Languages",
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "list_code_usages_csharp.findUsages",
        "title": "Find C# Code Usages"
      },
      {
        "command": "list_code_usages_csharp.testExternalLib",
        "title": "Test External Library Symbol Detection"
      },
      {
        "command": "list_code_usages_csharp.testDiagnostic",
        "title": "Test C# Language Server Capabilities"
      }
    ],
    "languageModelTools": [
      {
        "name": "find_symbol_usages",
        "displayName": "Find Symbol Usages",
        "modelDescription": "Find all usages of a symbol (class, method, property, etc.) in the workspace. Works with C#, Python, JavaScript, and other languages supported by VS Code.",
        "toolReferenceName": "find_symbol_usages",
        "userDescription": "Searches for all usages of a symbol in your workspace (supports multiple languages)",
        "canBeReferencedInPrompt": true,
        "inputSchema": {
          "type": "object",
          "properties": {
            "symbolName": {
              "type": "string",
              "description": "The name of the symbol to find usages for (e.g., class name, method name, property name, function name)"
            },
            "filePaths": {
              "type": "array",
              "description": "Optional: Absolute paths to files where the symbol might be defined",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["symbolName"]
        }
      },
      {
        "name": "find_implementations",
        "displayName": "Find Implementations",
        "modelDescription": "Find all implementations of an interface or all overrides of an abstract/virtual method.",
        "toolReferenceName": "find_implementations",
        "userDescription": "Finds all concrete implementations of an interface or abstract member",
        "canBeReferencedInPrompt": true,
        "inputSchema": {
          "type": "object",
          "properties": {
            "symbolName": {
              "type": "string",
              "description": "The name of the interface or abstract member to find implementations for"
            },
            "filePaths": {
              "type": "array",
              "description": "Optional: Absolute paths to files where the symbol might be defined",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["symbolName"]
        }
      }
    ],
    "configuration": {
      "title": "C# Code Usages",
      "properties": {
        "csharpCodeUsages.enableCache": {
          "type": "boolean",
          "default": true,
          "description": "Enable caching for symbol positions"
        },
        "csharpCodeUsages.searchStrategies": {
          "type": "array",
          "default": [
            "definition",
            "workspace",
            "document",
            "text"
          ],
          "description": "Search strategies to use (in order). 'definition' strategy supports external libraries (NuGet packages)."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package-bundle",
    "compile": "npm run build",
    "watch": "npm run watch-bundle",
    "package": "vsce package",
    "build": "node esbuild.js",
    "watch-bundle": "node esbuild.js --watch",
    "package-bundle": "node esbuild.js --production"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@types/vscode": "^1.96.0",
    "@vscode/vsce": "^3.0.0",
    "esbuild": "^0.25.11",
    "typescript": "^5.3.0"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.0.0"
  }
}
